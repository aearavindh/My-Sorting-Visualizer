{"version":3,"sources":["Line.js","App.js","reportWebVitals.js","index.js"],"names":["Line","props","style","height","backgroundColor","color","className","number","App","useState","elements","setElements","disabled","setDisabled","generateButton","setGenerateButton","lastChangedIndex","setLastChangedIndex","window","matchMedia","matches","setMatches","numberOfLines","setNumberOfLines","useEffect","addEventListener","e","sleep","seconds","waitUntil","Date","getTime","selectionSortArray","a","copy","i","setTimeout","min","j","length","temp","onClick","arr","Math","floor","random","key","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aaae2b1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Line.css';\r\n\r\nfunction Line(props) {\r\n    return (\r\n        <div style={{height: props.height + 'px', backgroundColor: props.color}} className=\"line\">\r\n            <p>{props.number}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Line;\r\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Line from \"./Line\";\n\nfunction App() {\n  const [elements, setElements] = useState([]);\n  const [disabled, setDisabled] = useState(true);\n  const [generateButton, setGenerateButton] = useState(false);\n  const [lastChangedIndex, setLastChangedIndex] = useState(null);\n  const [matches, setMatches] = useState(\n    window.matchMedia(\"(min-width: 600px)\").matches\n  );\n  let [numberOfLines, setNumberOfLines] = useState(50);\n\n  useEffect(() => {\n    window\n      .matchMedia(\"(min-width: 600px)\")\n      .addEventListener(\"change\", (e) => setMatches(e.matches));\n  }, []);\n\n  useEffect(() => {\n    if (matches) {\n      setNumberOfLines(50);\n    } else {\n      setNumberOfLines(25);\n    }\n  }, [matches]);\n\n  const generateRandomArray = () => {\n    setLastChangedIndex(null);\n    let arr = [];\n    for (let i = 0; i < numberOfLines; i++) {\n      arr[i] = Math.floor((Math.random() * 100) % 25);\n    }\n    setElements(arr);\n    setDisabled(false);\n  };\n\n  const sleep = (seconds) => {\n    const waitUntil = new Date().getTime() + seconds * 1000;\n    while (new Date().getTime() < waitUntil) {\n      // do nothing\n    }\n  };\n\n  const bubbleSortArray = () => {\n    setDisabled(true);\n    setGenerateButton(true);\n    let copy = elements;\n    for (let i = 0; i < copy.length - 1; i++) {\n      for (let j = 0; j < copy.length - 1 - i; j++) {\n        setTimeout(() => {\n          if (copy[j] > copy[j + 1]) {\n            let temp = copy[j];\n            copy[j] = copy[j + 1];\n            copy[j + 1] = temp;\n            setLastChangedIndex(j + 1);\n            setElements([...copy]);\n          }\n          sleep(0.01);\n          if (i === numberOfLines - 2) {\n            setDisabled(false);\n            setGenerateButton(false);\n          }\n        }, 500);\n      }\n      setLastChangedIndex(null);\n    }\n    setElements([...copy]);\n  };\n\n  const insertionSortArray = () => {\n    setDisabled(true);\n    setGenerateButton(true);\n    let copy = elements;\n    for (let i = 1; i < copy.length; i++) {\n      setTimeout(() => {\n        let key = copy[i];\n        let j = i - 1;\n\n        while (j >= 0 && copy[j] > key) {\n          copy[j + 1] = copy[j];\n          setLastChangedIndex(j + 1);\n          j--;\n          setElements([...copy]);\n        }\n        copy[j + 1] = key;\n        setLastChangedIndex(j + 1);\n        setElements([...copy]);\n        sleep(0.2);\n        if (i === numberOfLines - 1) {\n          setDisabled(false);\n          setGenerateButton(false);\n        }\n      }, 500);\n    }\n    setLastChangedIndex(null);\n    setElements([...copy]);\n  };\n\n  const selectionSortArray = async () => {\n    setDisabled(true);\n    setGenerateButton(true);\n    let copy = elements;\n    for (let i = 0; i < copy.length - 1; i++) {\n      setTimeout(() => {\n        let min = i;\n        for (let j = i + 1; j < copy.length; j++) {\n          if (copy[j] < copy[min]) min = j;\n        }\n\n        let temp = copy[min];\n        copy[min] = copy[i];\n        copy[i] = temp;\n        setLastChangedIndex(i);\n        setElements([...copy]);\n        sleep(0.2);\n        if (i === numberOfLines - 2) {\n          setDisabled(false);\n          setGenerateButton(false);\n        }\n      }, 500);\n    }\n    setLastChangedIndex(null);\n    setElements([...copy]);\n  };\n\n  return (\n    <div className=\"app\">\n      <header className=\"app_header\">\n        <button disabled={generateButton} onClick={generateRandomArray}>\n          Generate Random Array\n        </button>\n        <button disabled={disabled} onClick={bubbleSortArray}>\n          Bubble Sort\n        </button>\n        <button disabled={disabled} onClick={insertionSortArray}>\n          Insertion Sort\n        </button>\n        <button disabled={disabled} onClick={selectionSortArray}>\n          Selection Sort\n        </button>\n        {/* <button >Merge Sort</button>\n        <button >Quick Sort</button> */}\n      </header>\n      <div className=\"app_body\">\n        {elements.length === 0 ? (\n          <h3 className=\"app_body--placeholder\">\n            Welcome to Sorting Visualizer{\" \"}\n            {matches ? \"\" : \"(Please view in computer for better experience)\"}\n          </h3>\n        ) : (\n          elements.map((a, index) => {\n            return (\n              <Line\n                key={index}\n                height={a * 20}\n                number={a}\n                color={lastChangedIndex === index ? \"green\" : \"#66374e\"}\n              />\n            );\n          })\n        )}\n      </div>\n      <footer className=\"app_footer\">\n        <h3>Aravindh A E</h3>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}